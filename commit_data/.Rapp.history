install.packages("ggvis")
library("ggvis")
search()
X <- matrix(c(1,2,3,4), nrow =4, ncol =1)#
Y <- matrix(c(9,6,4,1), nrow =4, ncol =1)#
calCovariance <- function(x, y){#
		matrix11 <- sum((x - mean(x)) * (x - mean(x)))/(length(x)-1)#
		matrix12 <- sum((x - mean(x)) * (y - mean(y)))/(length(x)-1)#
		matrix21 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		matrix22 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		return (matrix(c(matrix11, matrix12, matrix21, matrix22), nrow =2, ncol =2))}#
cov(cbind(X,Y))#
calCovariance(X,Y)=cov(cbind(X,Y))
X <- matrix(c(1,2,3,4), nrow =4, ncol =1)#
Y <- matrix(c(9,6,4,1), nrow =4, ncol =1)#
calCovariance <- function(x, y){#
		matrix11 <- sum((x - mean(x)) * (x - mean(x)))/(length(x)-1)#
		matrix12 <- sum((x - mean(x)) * (y - mean(y)))/(length(x)-1)#
		matrix21 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		matrix22 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		return (matrix(c(matrix11, matrix12, matrix21, matrix22), nrow =2, ncol =2))}#
cov(cbind(X,Y))#
calCovariance(X,Y)
calCovariance(X,Y)=cov(cbind(X,Y))
clear
X <- matrix(c(1,2,3,4), nrow =4, ncol =1)#
Y <- matrix(c(9,6,4,1), nrow =4, ncol =1)#
calCovariance <- function(x, y){#
		matrix11 <- sum((x - mean(x)) * (x - mean(x)))/(length(x)-1)#
		matrix12 <- sum((x - mean(x)) * (y - mean(y)))/(length(x)-1)#
		matrix21 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		matrix22 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		return (matrix(c(matrix11, matrix12, matrix21, matrix22), nrow =2, ncol =2))}#
cov(cbind(X,Y))#
calCovariance(X,Y)==cov(cbind(X,Y))
X <- matrix(c(1,2,3,4), nrow =4, ncol =1)#
Y <- matrix(c(9,6,4,1), nrow =4, ncol =1)#
calCovariance <- function(x, y){#
		matrix11 <- sum((x - mean(x)) * (x - mean(x)))/(length(x)-1)#
		matrix12 <- sum((x - mean(x)) * (y - mean(y)))/(length(x)-1)#
		matrix21 <- sum((y - mean(y)) * (x - mean(x)))/(length(x)-1)#
		matrix22 <- sum((y - mean(y)) * (y - mean(y)))/(length(y)-1)#
		return (matrix(c(matrix11, matrix12, matrix21, matrix22), nrow =2, ncol =2))}#
cov(cbind(X,Y))#
calCovariance(X,Y)==cov(cbind(X,Y))
mean((X^2)) == ((mean(X))^2 + (sd(X))^2)
message("Verifying equation")#
sigmaSquare = sum((X-mean(X))*(X-mean(X)))/4#
if(mean(X^2) == mean(X)^2+ sigmaSquare)#
    cat("Equation verified!")
message(”Verifying equation”)#
sigmaSquare = sum((X−mean(X))*(X−mean(X)))/4 if(mean(Xˆ2) == mean(X)ˆ2+ sigmaSquare)#
cat(”Equation verified !”)
message(”Verifying equation”)#
sigmaSquare = sum((X-mean(X))*(X-mean(X)))/4#
if(mean(X^2) == mean(X)^2+ sigmaSquare)#
cat("Equation verified!")
message("Verifying equation")#
sigmaSquare = sum((X-mean(X))*(X-mean(X)))/4#
if(mean(X^2) == mean(X)^2+ sigmaSquare)#
cat("Equation verified!")
data<-read.csv("comments1.csv")
dates<-data$created_convert
dates
count(data[1:], var="created_convert")
count(data[1:,], var="created_convert")
count(data, var="created_convert")
count(data, "created_convert")
a<-table(dates)
a
write.table(a, file="comments_count_team1.csv")
write.table(a, file="comments_count_team1.csv", sep=" ")
write.table(a, file="comments_count_team1.csv", sep="\b")
write.table(a, file="comments_count_team1.csv", sep=",")
write.table(a, file="comments_count_team1.csv", sep=",", col.names="id, date, counts")
data<-read.csv("comments2.csv")
dates<-data$created_convert
a<-table(dates)
write.table(a, file="comments_count_team1.csv", sep=",")
data<-read.csv("comments3.csv")
dates<-data$created_convert
a<-table(dates)
write.table(a, file="comments_count_team3.csv", sep=",")
data<-read.csv("comments1.csv")#
dates<-data$created_convert#
a<-table(dates)#
write.table(a, file="comments_count_team1.csv", sep=",")
data<-read.csv("comments2.csv")
dates<-data$created_convert#
a<-table(dates)
write.table(a, file="comments_count_team2.csv", sep=",")
data<-read.csv("comments4.csv")
dates<-data$created_convert#
a<-table(dates)
write.table(a, file="comments_count_team4.csv", sep=",")
data<-read.csv("comments2.csv")
dates<-data$created_convert#
a<-table(dates)
write.table(a, file="comments_count_team2.csv", sep=",")
data<-read("team1.csv")
data<-read.csv("team1.csv")
issue_ids<-data$issue_id
a<-table(issue_ids)
a
a<-table(data)
a
a<-table(issue_ids)
a
data<-read.csv("team2.csv")
issue_ids<-data$issue_id
a<-table(issue_ids)
A
a
data<-read.csv("team3.csv")
issue_ids<-data$issue_id
a<-table(issue_ids)
a
data<-read.csv("comments_count_team1")
data<-read.csv("comments_count_team1.csv")
data
data<-read.csv("comments_count_team1.csv")
data<-read.csv("comments_count_team1.csv")
data
table<-read.table("comments_count_team1.csv")
table
table<-read.table("comments_count_team1.csv", header=TRUE)
table
counts<-table(table)
counts
barplot(table)
counts<-data$counts
counts
barplot(counts, main="Comments Count for Team1", names.arg=data$date)
threshold<- -0.5
threshold
clear
cl
clr
data<-read.csv('group1_commit_data.csv')#
commit<-data$commits#
norm_commit<-rnorm(commit, mean =0, sd=1)#
scale(commit, center = TRUE, scale = TRUE)#
zscore<-(commit-mean(commit)/sd(commit))#
zscore_norm<-(norm_commit-mean(norm_commit)/sd(norm_commit))
data<-read.csv('group1_commit_data.csv')#
commit<-data$commits#
norm_commit<-rnorm(commit, mean =0, sd=1)#
scale(commit, center = TRUE, scale = TRUE)#
zscore<-(commit-mean(commit)/sd(commit))#
zscore_norm<-(norm_commit-mean(norm_commit)/sd(norm_commit))
x1<-zscore_norm#
threshold <- -0.5#
x2<-threshold
above<-x1>x2
intersect.points<-which(diff(above)!=0)
x1.slopes<-x1[intersect.points+1]-x1[intersect.points]#
x2.slopes<-x2[intersect.points+1]-x2[intersect.points]
x.points<-intersect.points + ((x2[intersect.points] - x1[intersect.points]) / (x1.slopes-x2.slopes))#
y.points<-x1[intersect.points] + (x1.slopes*(x.points-intersect.points))
plot(x1,type='l')#
lines(x2,type='l',col='red')#
points(x.points,y.points,col='blue')
lines(h=-0.5, type="o", col="red", lty = 2)
adline(h=-0.5, type="o", col="red", lty = 2)
abline(h=-0.5, type="o", col="red", lty = 2)
axis(side=1, at=c(1:16))
intersect.points
x2.slopes
points(intersect.points)
points(intersect.points, type="p", col="red")
zsocre_norm
x1
ypoints
y.poinys
y.points
